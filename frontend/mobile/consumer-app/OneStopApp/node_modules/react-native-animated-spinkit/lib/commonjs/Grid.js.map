{"version":3,"sources":["Grid.tsx"],"names":["values","Grid","React","Component","render","props","size","color","style","animating","hidesWhenStopped","rest","grid","value","duration","keyframes","interpolations","width","height","flexWrap","flexDirection","opacity","map","index","backgroundColor","transform","scale","interpolate","inputRange","outputRange","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,MAAMA,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAf;;AACe,MAAMC,IAAN,SAAmBC,KAAK,CAACC,SAAzB,CAAiD;AAG9DC,EAAAA,MAAM,GAAG;AACP,wBAOI,KAAKC,KAPT;AAAA,UAAM;AACJC,MAAAA,IADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,SAJI;AAKJC,MAAAA;AALI,KAAN;AAAA,UAMKC,IANL;;AASA,wBACE,oBAAC,2BAAD;AACE,MAAA,aAAa,EAAE,OAAO;AACpBC,QAAAA,IAAI,EAAGC,KAAD,IACJ,oBAAQ,GAAR,EAAa,CAAb,EAAgB;AACdC,UAAAA,QAAQ,EAAE,IADI;AAEdD,UAAAA,KAAK,EAAEA,KAFO;AAGdE,UAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,GAAZ;AAHG,SAAhB;AAFkB,OAAP,CADjB;AASE,MAAA,SAAS,EAAEN;AATb,OAWIO,cAAD,iBACC,oBAAC,iBAAD;AACE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,KAAK,EAAEX,IADT;AAEEY,QAAAA,MAAM,EAAEZ,IAFV;AAGEa,QAAAA,QAAQ,EAAE,MAHZ;AAIEC,QAAAA,aAAa,EAAE,KAJjB;AAKEC,QAAAA,OAAO,EAAE,CAACZ,SAAD,IAAcC,gBAAd,GAAiC,CAAjC,GAAqC;AALhD,OADK,EAQLF,KARK;AADT,OAWMG,IAXN,GAaGX,MAAM,CACJsB,GADF,CACOT,KAAD,IAAWG,cAAc,CAACJ,IAAf,CAAoBC,KAApB,CADjB,EAEES,GAFF,CAEM,CAACT,KAAD,EAAQU,KAAR,kBACH,oBAAC,qBAAD,CAAU,IAAV;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,KAAK,EAAE;AACLN,QAAAA,KAAK,EAAEX,IAAI,GAAG,CADT;AAELY,QAAAA,MAAM,EAAEZ,IAAI,GAAG,CAFV;AAGLkB,QAAAA,eAAe,EAAEjB,KAHZ;AAILkB,QAAAA,SAAS,EAAE,CACT;AACEC,UAAAA,KAAK,EAAEb,KAAK,CAACc,WAAN,CAAkB;AACvBC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,GAAZ,CADW;AAEvBC,YAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAV,EAAa,CAAb;AAFU,WAAlB;AADT,SADS;AAJN;AAFT,MAHH,CAbH,CAZJ,CADF;AAkDD;;AA/D6D;;;;gBAA3C5B,I,kBACG6B,0B","sourcesContent":["import * as React from 'react'\nimport { Animated, View } from 'react-native'\nimport { SpinnerProps, defaultProps } from './SpinnerProps'\nimport AnimationContainer from './AnimationContainer'\nimport { stagger } from './utils'\n\nconst values = [2, 3, 4, 1, 2, 3, 0, 1, 2]\nexport default class Grid extends React.Component<SpinnerProps> {\n  static defaultProps = defaultProps\n\n  render() {\n    const {\n      size,\n      color,\n      style,\n      animating,\n      hidesWhenStopped,\n      ...rest\n    } = this.props\n\n    return (\n      <AnimationContainer\n        initAnimation={() => ({\n          grid: (value) =>\n            stagger(100, 5, {\n              duration: 1300,\n              value: value,\n              keyframes: [0, 35, 70, 100],\n            }),\n        })}\n        animating={animating}\n      >\n        {(interpolations) => (\n          <View\n            style={[\n              {\n                width: size,\n                height: size,\n                flexWrap: 'wrap',\n                flexDirection: 'row',\n                opacity: !animating && hidesWhenStopped ? 0 : 1,\n              },\n              style,\n            ]}\n            {...rest}\n          >\n            {values\n              .map((value) => interpolations.grid[value])\n              .map((value, index) => (\n                <Animated.View\n                  key={index}\n                  style={{\n                    width: size / 3,\n                    height: size / 3,\n                    backgroundColor: color,\n                    transform: [\n                      {\n                        scale: value.interpolate({\n                          inputRange: [0, 35, 70, 100],\n                          outputRange: [1, 0.01, 1, 1],\n                        }),\n                      },\n                    ],\n                  }}\n                />\n              ))}\n          </View>\n        )}\n      </AnimationContainer>\n    )\n  }\n}\n"]}