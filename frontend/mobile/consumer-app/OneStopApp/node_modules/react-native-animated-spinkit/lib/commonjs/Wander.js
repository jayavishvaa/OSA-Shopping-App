"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _SpinnerProps = require("./SpinnerProps");

var _AnimationContainer = _interopRequireDefault(require("./AnimationContainer"));

var _utils = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Wander extends React.Component {
  render() {
    const _this$props = this.props,
          {
      size,
      color,
      style,
      animating,
      hidesWhenStopped
    } = _this$props,
          rest = _objectWithoutProperties(_this$props, ["size", "color", "style", "animating", "hidesWhenStopped"]);

    const wanderDistance = size * 0.75;
    return /*#__PURE__*/React.createElement(_AnimationContainer.default, {
      initAnimation: () => ({
        wander: value => ({
          values: [value],
          animation: (0, _utils.anim)({
            duration: 2000,
            value: value,
            keyframes: [0, 25, 50, 75, 100]
          })
        })
      }),
      animating: animating
    }, values => /*#__PURE__*/React.createElement(_reactNative.View, _extends({
      style: [{
        width: size,
        height: size,
        opacity: !animating && hidesWhenStopped ? 0 : 1
      }, style]
    }, rest), Array(3).fill(null).map((_, index) => /*#__PURE__*/React.createElement(_reactNative.View, {
      key: index,
      style: {
        width: size,
        height: size,
        position: 'absolute',
        transform: [{
          rotate: "".concat(index * 90, "deg")
        }]
      }
    }, /*#__PURE__*/React.createElement(_reactNative.Animated.View, {
      style: {
        width: size / 5,
        height: size / 5,
        backgroundColor: color,
        position: 'absolute',
        transform: [{
          translateX: values.wander[0].interpolate({
            inputRange: [0, 25, 50, 75, 100],
            outputRange: [0, wanderDistance, wanderDistance, 0, 0]
          })
        }, {
          translateY: values.wander[0].interpolate({
            inputRange: [0, 25, 50, 75, 100],
            outputRange: [0, 0, wanderDistance, wanderDistance, 0]
          })
        }, {
          scale: values.wander[0].interpolate({
            inputRange: [0, 25, 50, 75, 100],
            outputRange: index % 2 === 0 ? [1, 0.6, 1, 0.6, 1] : [0.6, 1, 0.6, 1, 0.6]
          })
        }, {
          rotate: values.wander[0].interpolate({
            inputRange: [0, 25, 50, 75, 100],
            outputRange: ['0deg', '-90deg', '-180deg', '-270deg', '-360deg']
          })
        }]
      }
    })))));
  }

}

exports.default = Wander;

_defineProperty(Wander, "defaultProps", _SpinnerProps.defaultProps);
//# sourceMappingURL=Wander.js.map